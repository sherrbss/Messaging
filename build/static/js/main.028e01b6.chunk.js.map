{"version":3,"sources":["store/utility.js","store/reducers/auth.js","store/reducers/message.js","settings.js","websocket.js","containers/Chat.js","routes.js","store/actions/auth.js","components/Contact.js","containers/Sidepanel.js","store/actions/message.js","containers/Profile.js","App.js","index.js"],"names":["updateObject","oldObject","updatedProperties","Object","objectSpread","initialState","token","username","error","loading","reducer","state","arguments","length","undefined","action","type","authStart","authSuccess","authFail","authLogout","messages","chats","toConsumableArray","concat","message","addMessage","reverse","setMessages","setChats","HOST_URL","SOCKET_URL","WebSocketService","classCallCheck","this","callbacks","socketRef","instance","chatUrl","_this","path","WebSocket","onopen","console","log","onmessage","e","socketNewMessage","data","onerror","onclose","connect","close","parsedData","JSON","parse","command","keys","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","stringify","err","readyState","WebSocketInstance","getInstance","Chat","props","possibleConstructorReturn","getPrototypeOf","call","conversationID","messageChangeHandler","event","setState","target","value","sendMessageHandler","preventDefault","messageObject","match","params","chatID","newChatMessage","renderTimestamp","timestamp","Date","renderMessages","map","i","arr","author","currentUser","react_default","a","createElement","key","id","style","marginBottom","className","avatar","float","size","icon","scrollToBottom","messagesEnd","scrollIntoView","behavior","initialiseChat","_this2","waitForSocketConnection","fetchMessages","callback","component","setTimeout","newProps","_this3","disconnect","_this4","clear","ref","el","onSubmit","onChange","required","placeholder","aria-hidden","React","Component","auth","BaseRouter","Route","exact","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","Contact","NavLink","to","chatURL","color","status","name","padding-left","top","antIcon","fontSize","spin","Sidepanel","loginForm","changeForm","authenticate","login","password","waitForAuthDetails","getUserChats","currName","activeChats","c","participants","currentParticipant","parentCallback","components_Contact","picURL","menu","es_menu","Item","onClick","isAuthenticated","height","dropdown","overlay","width","font-size","font-weight","text-align","position","bottom","display","indicator","method","border-top","userName","axios","post","then","res","expirationDate","getTime","setItem","catch","actions","defaults","xsrfHeaderName","xsrfCookieName","headers","Content-Type","Authorization","get","messageActions","Profile","Redirect","selectedChat","Content","Layout","Header","Sider","App","selectedMessage","callbackFunction","childData","addCallbacks","bind","assertThisInitialized","autoSignIn","BrowserRouter","layout","authenticated","containers_Sidepanel","containers_Profile","routes","getItem","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","rootReducer","combineReducers","authReducer","messageReducer","createStore","applyMiddleware","thunk","configureStore","app","es","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.028e01b6.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  username: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    username: action.username,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    username: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AUTH_START\":\n      return authStart(state, action);\n    case \"AUTH_SUCCESS\":\n      return authSuccess(state, action);\n    case \"AUTH_FAIL\":\n      return authFail(state, action);\n    case \"AUTH_LOGOUT\":\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { updateObject } from \"../utility\";\n\nconst initialState = {\n  messages: [],\n  chats: []\n};\n\nconst addMessage = (state, action) => {\n  return updateObject(state, {\n    messages: [...state.messages, action.message]\n  });\n};\n\nconst setMessages = (state, action) => {\n  return updateObject(state, {\n    messages: action.messages.reverse()\n  });\n};\n\nconst setChats = (state, action) => {\n  return updateObject(state, {\n    chats: action.chats\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_MESSAGE\":\n      return addMessage(state, action);\n    case \"SET_MESSAGES\":\n      return setMessages(state, action);\n    case \"GET_CHATS_SUCCESS\":\n      return setChats(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","let DEBUG = true;\nlet HOST_URL = HOST_URL = \"http://192.168.2.12:8000\";\nlet SOCKET_URL = \"ws://192.168.2.12:8000\";\nif (DEBUG) {\n  HOST_URL = \"http://127.0.0.1:8000\";\n  SOCKET_URL = \"ws://127.0.0.1:8000\";\n}\n\nexport { HOST_URL, SOCKET_URL };\n","import { SOCKET_URL } from \"./settings\";\n\nclass WebSocketService {\n  static instance = null;\n  callbacks = {};\n\n  static getInstance() {\n    if (!WebSocketService.instance) {\n      WebSocketService.instance = new WebSocketService();\n    }\n    return WebSocketService.instance;\n  }\n\n  constructor() {\n    this.socketRef = null;\n  }\n\n  connect(chatUrl) {\n    const path = `${SOCKET_URL}/ws/chat/${chatUrl}/`;\n    this.socketRef = new WebSocket(path);\n    this.socketRef.onopen = () => {\n      console.log(\"WebSocket open\");\n    };\n    this.socketRef.onmessage = e => {\n      this.socketNewMessage(e.data);\n    };\n    this.socketRef.onerror = e => {\n      console.log(e.message);\n    };\n    this.socketRef.onclose = () => {\n      console.log(\"WebSocket closed.\");\n      this.connect();\n    };\n  }\n\n  disconnect() {\n    this.socketRef.close();\n  }\n\n  socketNewMessage(data) {\n    const parsedData = JSON.parse(data);\n    const command = parsedData.command;\n    if (Object.keys(this.callbacks).length === 0) {\n      return;\n    }\n    if (command === \"messages\") {\n      this.callbacks[command](parsedData.messages);\n    }\n    if (command === \"new_message\") {\n      this.callbacks[command](parsedData.message);\n    }\n  }\n\n  fetchMessages(username, chatId) {\n    this.sendMessage({\n      command: \"fetch_messages\",\n      username: username,\n      chatId: chatId\n    });\n  }\n\n  newChatMessage(message) {\n    this.sendMessage({\n      command: \"new_message\",\n      from: message.from,\n      message: message.content,\n      chatId: message.chatId\n    });\n  }\n\n  addCallbacks(messagesCallback, newMessageCallback) {\n    this.callbacks[\"messages\"] = messagesCallback;\n    this.callbacks[\"new_message\"] = newMessageCallback;\n  }\n\n  sendMessage(data) {\n    try {\n      this.socketRef.send(JSON.stringify({ ...data }));\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  state() {\n    return this.socketRef.readyState;\n  }\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport WebSocketInstance from \"../websocket\";\nimport cascasePropsUp from \"../helper/cascadeProps\";\n\nimport { Avatar } from \"antd\";\n\nclass Chat extends React.Component {\n  state = {\n    message: \"\",\n    conversationID: \"\"\n  };\n\n  initialiseChat() {\n    this.waitForSocketConnection(() => {\n      WebSocketInstance.fetchMessages(\n        this.props.username,\n        this.props.match.params.chatID\n      );\n    });\n    WebSocketInstance.connect(this.props.match.params.chatID);\n  }\n\n  constructor(props) {\n    super(props);\n    this.initialiseChat();\n  }\n\n  waitForSocketConnection(callback) {\n    const component = this;\n    setTimeout(function () {\n      if (WebSocketInstance.state() === 1) {\n        console.log(\"Connection is made\");\n        callback();\n        return;\n      } else {\n        console.log(\"wait for connection...\");\n        component.waitForSocketConnection(callback);\n      }\n    }, 100);\n  }\n\n  messageChangeHandler = event => {\n    this.setState({ message: event.target.value });\n  };\n\n  sendMessageHandler = e => {\n    e.preventDefault();\n    const messageObject = {\n      from: this.props.username,\n      content: this.state.message,\n      chatId: this.props.match.params.chatID\n    };\n    WebSocketInstance.newChatMessage(messageObject);\n    this.setState({ message: \"\" });\n  };\n\n\n\n\n\n  renderTimestamp = timestamp => {\n    return `${new Date(timestamp)}`;\n  };\n\n\n  //(this.setState({ conversationID: message.author != this.props.username ? message.author : {} }))\n  renderMessages = messages => {\n\n    messages.map((message, i, arr) => (\n      message.author != this.props.username ? console.log(\"SELECTED CONVERSATION: \", message.author) : {}\n\n    ));\n    console.log(\"CHAT - PARTICIPANT - STATE: \", this.state.conversationID)\n\n\n    const currentUser = this.props.username;\n    const tempMessages = messages.map((message, i, arr) => (\n\n      <li\n        key={message.id}\n        style={{ marginBottom: arr.length - 1 === i ? \"45px\" : \"15px\" }}\n        className={message.author === currentUser ? \"sent\" : \"replies\"}\n\n      >\n        <Avatar style={message.author === currentUser ? { \"float\": \"right\" } : {}} size={50} icon=\"user\" />\n\n        <p>\n          {message.content}\n          <br />\n          <small>{this.renderTimestamp(message.timestamp)}</small>\n        </p>\n      </li>\n\n\n    ));\n\n    return tempMessages;\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.chatID !== newProps.match.params.chatID) {\n      WebSocketInstance.disconnect();\n      this.waitForSocketConnection(() => {\n        WebSocketInstance.fetchMessages(\n          this.props.username,\n          newProps.match.params.chatID\n        );\n      });\n      WebSocketInstance.connect(newProps.match.params.chatID);\n    }\n  }\n\n  /* \n  <div>\n            {this.props.messages.map((message, i, arr) => (\n              message.author != this.props.username ? <h1>{message.author}</h1> : <div style={{ \"display\": \"none\" }}></div>\n\n            ))}\n\n          </div>\n  \n  */\n\n  render() {\n    return (\n      <cascasePropsUp>\n        {}\n        <div className=\"messages\">\n\n          <ul id=\"chat-log\">\n            {this.props.messages && this.renderMessages(this.props.messages)}\n\n            <div\n              style={{ float: \"left\", clear: \"both\" }}\n              ref={el => {\n                this.messagesEnd = el;\n              }}\n            />\n          </ul>\n        </div>\n        <div className=\"message-input\">\n          <form onSubmit={this.sendMessageHandler}>\n            <div className=\"wrap\">\n              <input\n                onChange={this.messageChangeHandler}\n                value={this.state.message}\n                required\n                id=\"chat-message-input\"\n                type=\"text\"\n                placeholder=\"Write your message...\"\n              />\n              <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\" />\n              <button id=\"chat-message-submit\" className=\"submit\">\n                <i className=\"fa fa-paper-plane\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </form>\n        </div>\n      </cascasePropsUp>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    messages: state.message.messages,\n    conversationID: state.message.conversationID\n  };\n};\n\nexport default connect(mapStateToProps)(Chat);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport cascadeProps from \"./helper/cascadeProps\";\n\nimport Chat from \"./containers/Chat\";\n\n\nconst BaseRouter = () => (\n  <cascadeProps>\n    <Route exact path=\"/:chatID/\" component={Chat} />\n  </cascadeProps>\n);\n\nexport default BaseRouter;\n","import axios from \"axios\";\nimport { HOST_URL } from \"../../settings\";\n\nexport const authStart = () => {\n  return {\n    type: \"AUTH_START\"\n  };\n};\n\nexport const authSuccess = (username, token) => {\n  return {\n    type: \"AUTH_SUCCESS\",\n    token: token,\n    username: username\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: \"AUTH_FAIL\",\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"username\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: \"AUTH_LOGOUT\"\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(`${HOST_URL}/rest-auth/login/`, {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(username, token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(username, token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Avatar } from \"antd\";\n\nconst Contact = props => (\n  <NavLink to={`${props.chatURL}`} style={{ color: \"#fff\" }}>\n    <li className=\"contact\">\n      <div className=\"wrap\">\n        <span className={`contact-status ${props.status}`} />\n        {console.log(\"Contact - Status: \", props.status)}\n        {console.log(\"Contact - Status: \", props.name)}\n\n        <div className=\"meta\">\n          <Avatar size={50} icon=\"user\" />\n          <p className=\"name\" style={{ \"padding-left\": \"30%\", \"top\": \"10px\" }}>{props.name}</p>\n        </div>\n      </div>\n    </li>\n  </NavLink>\n);\n\nexport default Contact;\n","import React from \"react\";\n\nimport { Spin, Icon, Menu, Dropdown, Avatar } from \"antd\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\nimport * as messageActions from \"../store/actions/message\";\nimport Contact from \"../components/Contact\";\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Sidepanel extends React.Component {\n  state = {\n    loginForm: true\n  };\n\n  waitForAuthDetails() {\n    const component = this;\n    setTimeout(function () {\n      if (\n        component.props.token !== null &&\n        component.props.token !== undefined\n      ) {\n        component.props.getUserChats(\n          component.props.username,\n          component.props.token\n        );\n        return;\n      } else {\n        console.log(\"waiting for authentication details...\");\n        component.waitForAuthDetails();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.waitForAuthDetails();\n  }\n\n\n\n  changeForm = () => {\n    this.setState({ loginForm: !this.state.loginForm });\n  };\n\n  authenticate = e => {\n    e.preventDefault();\n    if (this.state.loginForm) {\n      this.props.login(e.target.username.value, e.target.password.value);\n    }\n  };\n\n  render() {\n    let currName = this.props.username;\n    console.log(\"Sidepanel - currName\", currName)\n    let activeChats = this.props.chats.map(c => {\n      { console.log(\"Sidepanel - Participants\", c.participants) }\n      { console.log(\"Sidepanel - Current slug\", c.id) }\n      let currentParticipant = c.participants[0] != currName ? c.participants[0] : c.participants[1];\n      this.props.parentCallback(currentParticipant);\n      return (\n        <Contact\n          key={c.id}\n          name={currentParticipant}\n          picURL=\"http://website.png\"\n          status=\"busy\"\n          chatURL={`/${c.id}`}\n        />\n      );\n    });\n\n    const menu = (\n      <Menu>\n        <Menu.Item>\n          <a onClick={this.props.logout}><Icon type=\"logout\" /> Log Out</a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    /*\n\n      <img\n        id=\"profile-img\"\n        src=\"http://website.png\"\n        className=\"online\"\n        alt=\"\"\n      />\n\n      <button onClick={() => this.props.logout()} className=\"authBtn\">\n                  <span>Logout</span>\n                </button>\n\n\n    */\n\n\n    return (\n\n      <div id=\"sidepanel\">\n\n        <div id=\"profile\" style={this.props.isAuthenticated ? { \"height\": \"10%\" } : { \"height\": \"100%\" }}>\n          <div className=\"wrap\">\n\n            <div id=\"usercard\" style={this.props.isAuthenticated ? { \"height\": \"100%\" } : { \"height\": \"20%\" }}>\n              {this.props.isAuthenticated ?\n                <Dropdown overlay={menu}>\n                  <a className=\"ant-dropdown-link\" style={{ \"width\": \"100%\" }}>\n                    <Avatar size={50} icon=\"user\" />\n                    <span className=\"\" style={{ \"width\": \"100%\", \"padding-left\": \"25%\", \"font-size\": \"24px\", \"font-weight\": \"600\" }}>{this.props.username}</span>\n                  </a>\n                </Dropdown> :\n                <div className=\"\" style={{ \"text-align\": \"center\", \"position\": \"relative\", \"height\": \"100%\" }} >\n                  <h1 style={{ \"color\": \"white\", \"position\": \"absolute\", \"bottom\": \"0\", \"width\": \"100%\" }}>Messaging System</h1>\n                </div>\n              }\n            </div>\n\n\n\n\n            <div id=\"expanded\" style={this.props.isAuthenticated ? { \"display\": \"none\" } : { \"height\": \"80%\" }} >\n              {this.props.loading ? (\n                <Spin indicator={antIcon} />\n              ) : this.props.isAuthenticated ? (\n                <div style={{ \"display\": \"none\" }}></div>\n              ) : (\n                    <div>\n                      <form method=\"POST\" onSubmit={this.authenticate}>\n                        {this.state.loginForm ? (\n                          <div>\n                            <input\n                              name=\"username\"\n                              type=\"text\"\n                              placeholder=\"username\"\n                            />\n                            <input\n                              name=\"password\"\n                              type=\"password\"\n                              placeholder=\"password\"\n                            />\n                          </div>\n                        ) : (\n                            <div style={{ \"display\": \"none\" }}></div>\n                          )}\n\n                        <button type=\"submit\">Login</button>\n                      </form>\n\n\n                    </div>\n                  )}\n            </div>\n          </div>\n        </div>\n\n        {this.props.isAuthenticated ?\n          <div id=\"contacts\" style={{ \"height\": \"90%\", \"border-top\": \"1px solid grey\" }} >\n            <h3 style={{ \"text-align\": \"center\", \"color\": \"white\" }}>Messages</h3>\n            <ul>{activeChats}</ul>\n          </div>\n          : <div style={{ \"display\": \"none\" }}></div>}\n\n\n      </div>\n\n    );\n  }\n}\n\n/*\n\n<div id=\"bottom-bar\" style={{ display: \"none\" }} >\n  <button id=\"addChat\" onClick={() => this.openAddChatPopup()}>\n    <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\" />\n    <span>Create chat</span>\n  </button>\n  <button id=\"settings\" >\n    <i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\" />\n    <span>Settings</span>\n  </button>\n</div>\n\n<div id=\"search\" style={{ display: \"none\" }} >\n  <label htmlFor=\"\">\n    <i className=\"fa fa-search\" aria-hidden=\"true\" />\n  </label>\n  <input type=\"text\" placeholder=\"Search Chats...\" />\n</div>\n\n*/\n// <button onClick={this.changeForm}>Switch</button>\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading,\n    token: state.auth.token,\n    username: state.auth.username,\n    chats: state.message.chats,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (userName, password) =>\n      dispatch(actions.authLogin(userName, password)),\n    logout: () => dispatch(actions.logout()),\n    getUserChats: (username, token) =>\n      dispatch(messageActions.getUserChats(username, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidepanel);\n","import axios from \"axios\";\nimport { HOST_URL } from \"../../settings\";\n\n\nexport const addMessage = message => {\n  return {\n    type: \"ADD_MESSAGE\",\n    message: message\n  };\n};\n\nexport const setMessages = messages => {\n  return {\n    type: \"SET_MESSAGES\",\n    messages: messages\n  };\n};\n\nconst getUserChatsSuccess = chats => {\n  return {\n    type: \"GET_CHATS_SUCCESS\",\n    chats: chats\n  };\n};\n\nexport const getUserChats = (username, token) => {\n  return dispatch => {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios\n      .get(`${HOST_URL}/chat/?username=${username}`)\n      .then(res => dispatch(getUserChatsSuccess(res.data)));\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport cascasePropsUp from \"../helper/cascadeProps\";\n\nimport { Avatar } from \"antd\";\n//<Avatar stlye={{ \"float\": \"left\" }} size={50} icon=\"user\" />\n\nclass Profile extends React.Component {\n\n\n  render() {\n\n    if (this.props.token === null) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"contact-profile\">\n        {this.props.username !== null ? (\n          <cascasePropsUp>\n\n\n\n            <p style={{ \"width\": \"100%\", \"text-align\": \"center\" }}>{this.props.selectedChat}</p>\n            <div className=\"social-media\">\n\n            </div>\n          </cascasePropsUp>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.auth.username,\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BaseRouter from \"./routes\";\nimport Sidepanel from \"./containers/Sidepanel\";\nimport Profile from \"./containers/Profile\";\nimport * as actions from \"./store/actions/auth\";\nimport * as messageActions from \"./store/actions/message\";\nimport WebSocketInstance from \"./websocket\";\nimport \"./assets/style.css\";\n\nimport 'antd/dist/antd.css';\nimport { Layout } from \"antd\";\nconst { Header, Content, Sider } = Layout;\n//added above import\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.autoSignIn();\n  }\n\n  constructor(props) {\n    super(props);\n    WebSocketInstance.addCallbacks(\n      this.props.setMessages.bind(this),\n      this.props.addMessage.bind(this)\n    );\n  }\n\n  state = { selectedMessage: \"\" }\n  callbackFunction = (childData) => {\n    this.setState({ selectedMessage: childData })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div id=\"frame\">\n\n          <Layout>\n            <Sider width={this.props.authenticated ? '30%' : '100%'}>\n              <Sidepanel parentCallback={this.callbackFunction} />\n            </Sider>\n\n\n            <Content width={this.props.authenticated ? '70%' : '0%'}>\n              <div className=\"content\">\n\n                <Profile selectedChat={this.state.selectedMessage} />\n                {console.log(\"App - Profile - parentCallback: \", this.state.selectedMessage)}\n                <BaseRouter />\n\n              </div>\n            </Content>\n          </Layout>\n\n\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authenticated: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoSignIn: () => dispatch(actions.authCheckState()),\n    addMessage: message => dispatch(messageActions.addMessage(message)),\n    setMessages: messages => dispatch(messageActions.setMessages(messages))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport \"antd/dist/antd.css\";\nimport authReducer from \"./store/reducers/auth\";\n\nimport messageReducer from \"./store/reducers/message\";\nimport App from \"./App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nfunction configureStore() {\n  const rootReducer = combineReducers({\n    auth: authReducer,\n    message: messageReducer\n  })\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n\nconst store = configureStore();\n\nconst app = (\n  <Provider store={store}>\n    <App />\n\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"app\"));\n"],"sourceRoot":""}